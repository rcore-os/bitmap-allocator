searchState.loadedDescShard("bitmap_allocator", 0, "BitmapAllocator\nAllocator of a bitmap, able to allocate / free bits.\nA bitmap consisting of only 16 bits. BitAlloc16 acts as …\nA bitmap of 16M bits\nA bitmap of 1M bits\nA bitmap of 256 bits\nA bitmap of 256M bits\nA bitmap of 4K bits\nA bitmap of 64K bits\nImplement the bit allocator by segment tree algorithm.\nThe bitmap has a total of CAP bits, numbered from 0 to …\nThe default value. Workaround for <code>const fn new() -&gt; Self</code>.\nAllocate a free bit.\nAllocate a free block with a given size, and return the …\nWhether there are free bits remaining\nFree an allocated bit.\nFree a contiguous block of bits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMark bits in the range as unallocated (available)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if no bits is available.\nFind a index not less than a given key, where the bit is …\nReverse of insert\nWhether a specific bit is free")